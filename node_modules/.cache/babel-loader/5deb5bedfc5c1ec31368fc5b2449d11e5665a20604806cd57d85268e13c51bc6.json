{"ast":null,"code":"var _jsxFileName = \"D:\\\\newapp\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport ChatWindow from './components/ChatWindow';\nimport SearchBar from './components/SearchBar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [mrn, setMrn] = useState('');\n  useEffect(() => {\n    const urlParams = new URLSearchParams(window.location.search);\n    const loggedIn = urlParams.get('logged_in');\n    const mrnParam = urlParams.get('mrn');\n    if (loggedIn === 'true' && mrnParam) {\n      setIsLoggedIn(true);\n      setMrn(mrnParam);\n    }\n  }, []);\n  const handleSearch = async query => {\n    setMessages([...messages, {\n      text: query,\n      sender: 'user'\n    }]);\n    try {\n      const response = await fetch(`http://localhost:8000/search?query=${encodeURIComponent(query)}`);\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      const data = await response.json();\n      setMessages(prevMessages => [...prevMessages, {\n        text: data.message,\n        sender: 'bot'\n      }]);\n    } catch (error) {\n      console.error('Error:', error);\n      setMessages(prevMessages => [...prevMessages, {\n        text: \"Sorry, there was an error processing your request.\",\n        sender: 'bot'\n      }]);\n    }\n  };\n  if (!isLoggedIn) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Please log in using the Streamlit page at http://localhost:8501\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Medical Chat App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Logged in with MRN: \", mrn]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SearchBar, {\n      onSearch: handleSearch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ChatWindow, {\n      messages: messages\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"4ojWq+dK7u72BrE4bMvFFcs/waU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","ChatWindow","SearchBar","jsxDEV","_jsxDEV","App","_s","messages","setMessages","isLoggedIn","setIsLoggedIn","mrn","setMrn","urlParams","URLSearchParams","window","location","search","loggedIn","get","mrnParam","handleSearch","query","text","sender","response","fetch","encodeURIComponent","ok","Error","data","json","prevMessages","message","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onSearch","_c","$RefreshReg$"],"sources":["D:/newapp/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport ChatWindow from './components/ChatWindow';\nimport SearchBar from './components/SearchBar';\n\nfunction App() {\n  const [messages, setMessages] = useState([]);\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [mrn, setMrn] = useState('');\n\n  useEffect(() => {\n    const urlParams = new URLSearchParams(window.location.search);\n    const loggedIn = urlParams.get('logged_in');\n    const mrnParam = urlParams.get('mrn');\n    if (loggedIn === 'true' && mrnParam) {\n      setIsLoggedIn(true);\n      setMrn(mrnParam);\n    }\n  }, []);\n\n  const handleSearch = async (query) => {\n    setMessages([...messages, { text: query, sender: 'user' }]);\n    try {\n      const response = await fetch(`http://localhost:8000/search?query=${encodeURIComponent(query)}`);\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      const data = await response.json();\n      setMessages(prevMessages => [...prevMessages, { text: data.message, sender: 'bot' }]);\n    } catch (error) {\n      console.error('Error:', error);\n      setMessages(prevMessages => [...prevMessages, { text: \"Sorry, there was an error processing your request.\", sender: 'bot' }]);\n    }\n  };\n\n  if (!isLoggedIn) {\n    return <div>Please log in using the Streamlit page at http://localhost:8501</div>;\n  }\n\n  return (\n    <div className=\"app\">\n      <h1>Medical Chat App</h1>\n      <p>Logged in with MRN: {mrn}</p>\n      <SearchBar onSearch={handleSearch} />\n      <ChatWindow messages={messages} />\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}